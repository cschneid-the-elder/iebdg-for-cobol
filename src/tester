#!/bin/bash

function testLexAndParse {

	while read line
	do
		java -cp ./class:.:./antlr-4.9.2-complete.jar org.antlr.v4.gui.TestRig $kind startRule -tokens < $line 1>/dev/null 2>$tmp02
		grep -v '^\[' $tmp02
		if [ "$?" -eq 0 ]
		then
			echo $line " NOT OK"
			export myRC=12
		else
			echo $line " OK"
		fi
		#java -cp ./class:.:./antlr-4.9.2-complete.jar org.antlr.v4.gui.TestRig $kind startRule -tree < $line | ./src/treeCount -vruleName=$line -vruleType=$kind
		#export myRC1=$?
		#if [ "$myRC1" -gt "$myRC" ]
		#then
		#	export myRC=$myRC1
		#fi
	done < $tmp01

}

function testProcess {

	while read line
	do
		echo $line >> test_$one.out
		java -jar DG4CBL.jar $line test_$one.out finest
	done < $tmp01
}

STARTTIME=$(date +%s)
export kind=Cobol
export myRC=0
export one=$1
export tmp01=/tmp/$(date +%Y%m%d%H%M%S).$$.iebdgforcobol01
export tmp02=/tmp/$(date +%Y%m%d%H%M%S).$$.iebdgforcobol02
if [ "$1" = "all" ]
then
  ls -Al testdata/test_*.struct | awk '{print $9}' > $tmp01
else
  ls -Al testdata/test_$1.struct | awk '{print $9}' > $tmp01
fi

if [ "$2" = "lex" ]
then
	testLexAndParse
	rm $tmp01
	rm $tmp02
else
	testProcess
	rm $tmp01
fi

ENDTIME=$(date +%s)

echo "elapsed time $(($ENDTIME - $STARTTIME)) seconds"

exit $myRC

